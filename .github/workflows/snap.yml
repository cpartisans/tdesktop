name: Snap.

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - 'changelog.txt'
      - 'LEGAL'
      - 'LICENSE'
      - '.github/**'
      - 'Telegram/build/**'
      - 'Telegram/Resources/uwp/**'
      - 'Telegram/Resources/winrc/**'
      - 'Telegram/SourceFiles/platform/win/**'
      - 'Telegram/SourceFiles/platform/mac/**'
      - 'Telegram/Telegram/**'
      - 'Telegram/configure.bat'
      - 'Telegram/Telegram.plist'
  workflow_dispatch:
    inputs:
      buildCommit:
        description: 'Commit for building. Default it latest on branch'
        required: false
        type: string
        default: ''

jobs:

  snap:
    name: Ubuntu
    runs-on: ubuntu-20.04

    env:
      UPLOAD_ARTIFACT: "true"
      ARTIFACT_NAME: "Snap-PTelegram"

    steps:
      - name: Clone.
        uses: actions/checkout@v3.1.0
        if: github.event.inputs.buildCommit == ''
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Clone with checkout.
        uses: actions/checkout@v3.1.0
        if: github.event.inputs.buildCommit != ''
        with:
          fetch-depth: 0
          submodules: recursive
          ref: ${{ github.event.inputs.buildCommit }}

      - name: First set up.
        run: |
          sudo iptables -P FORWARD ACCEPT
          sudo snap install --classic snapcraft
          sudo usermod -aG lxd $USER
          sudo snap run lxd init --auto
          sudo snap run lxd waitready

          sed -i 's/$API_ID/${{ secrets.API_ID }}/g' snap/snapcraft.yaml
          sed -i 's/$API_HASH/${{ secrets.API_HASH }}/g' snap/snapcraft.yaml

      - name: Telegram Desktop snap build.
        run: sg lxd -c 'snap run snapcraft -v'

      - name: Move and hash artifact.
        if: env.UPLOAD_ARTIFACT == 'true'
        run: |
          rm snap/snapcraft.yaml
          artifact_name=$(echo telegram-desktop_*.snap)
          echo "ARTIFACT_NAME=$artifact_name" >> $GITHUB_ENV
          sha256sum $artifact_name | awk -F " " 'END {print $1}' > telegram_snap_sha256.txt
          mkdir artifact
          mv $artifact_name artifact/
          mv telegram_snap_sha256.txt artifact/

      - uses: actions/upload-artifact@master
        if: env.UPLOAD_ARTIFACT == 'true'
        name: Upload artifact.
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: artifact
